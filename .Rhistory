geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
df = df |> mutate(residuals = Petal.Width- pred)
rsquare(model=mod, data=df)
plot(df)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
mod2 = df |> lm(Petal.Width ~ Sepal.Length + Sepal.Width)
mod2 = lm(Petal.Width ~ Sepal.Length + Sepal.Width, data = df)
mod2 = lm(Petal.Width ~ Sepal.Width, data = df)
mod1 = lm(Petal.Width ~ Sepal.Length, data = df)
summary(mod1 + mod2)
summary(mod1, mod2)
summary(mod1)
rsquare(model = mod1, data = df)
rsquare(model = mod1, data = df) + rsquare(model = mod2, data = df)
rsquare(model = mod1, data = df), rsquare(model = mod2, data = df)
rsquare(model = mod1, data = df) |> rsquare(model = mod2, data = df)
rsquare(model = mod1, data = df)
rsquare(model = mod2, data = df)
summary(mod2)
summary(mod1)
summary(mod2)
rsquare(model = mod1, data = df)
rsquare(model = mod2, data = df)
rsquare(model = mod, data = df)
mod3 = lm(Petal.Width ~ Sepal.Width + Sepal.Length, data = df)
rsquare(model = mod, data = df)
rsquare(model = mod3, data = df)
summary(mod)
df <- df %>% add_predictions(model=mod2)
df <- df %>% add_predictions(model=mod2)
df = df |> mutate(residuals = Petal.Width- pred)
ggplot(df)+
geom_point(aes(x = Sepal.Width, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Sepal.Width, y = pred), color = 'red')+
geom_abline(aes(slope = mod2[['coefficients']][['Sepal.Width']],
intercept = mod2[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Sepal.Width, y = Petal.Width, xend = Sepal.Width, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
df <- df %>% add_predictions(model=mod)
df = df |> mutate(residuals = Petal.Width- pred)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Sepal.Width, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Sepal.Width, y = pred), color = 'red')+
geom_abline(aes(slope = mod2[['coefficients']][['Sepal.Width']],
intercept = mod2[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Sepal.Width, y = Petal.Width, xend = Sepal.Width, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Sepal.Width, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Sepal.Width, y = pred), color = 'red')+
geom_abline(aes(slope = mod2[['coefficients']][['Sepal.Width']],
intercept = mod2[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Sepal.Width, y = Petal.Width, xend = Sepal.Width, yend = pred), alpha = 0.3)
library(tidyverse)
library(modelr)
summary(iris)
glimpse(iris)
unique(iris$Species)
df = iris |> filter(Species == 'versicolor')
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width, colour =))
mod <- lm(Petal.Width ~ Petal.Length, data = df)
summary(mod)
mod1 = lm(Petal.Width ~ Sepal.Length, data = df)
mod2 = lm(Petal.Width ~ Sepal.Width, data = df)
mod3 = lm(Petal.Width ~ Sepal.Width + Sepal.Length, data = df)
summary(mod1)
summary(mod2)
rsquare(model = mod1, data = df)
rsquare(model = mod2, data = df)
rsquare(model = mod, data = df)
rsquare(model = mod3, data = df)
df <- df %>% add_predictions(model=mod)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Sepal.Width, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Sepal.Width, y = pred), color = 'red')+
geom_abline(aes(slope = mod2[['coefficients']][['Sepal.Width']],
intercept = mod2[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Sepal.Width, y = Petal.Width, xend = Sepal.Width, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Sepal.Width, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Sepal.Width, y = pred), color = 'red')+
geom_abline(aes(slope = mod2[['coefficients']][['Sepal.Width']],
intercept = mod2[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Sepal.Width, y = Petal.Width, xend = Sepal.Width, yend = pred), alpha = 0.3)
ggplot(df)+
geom_point(aes(x = Petal.Length, y = Petal.Width), color = 'black', shape = 1)+
geom_point(aes(x = Petal.Length, y = pred), color = 'red')+
geom_abline(aes(slope = mod[['coefficients']][['Petal.Length']],
intercept = mod[['coefficients']][['(Intercept)']]),
color = 'blue', alpha = 0.75)+
geom_segment(aes(x = Petal.Length, y = Petal.Width, xend = Petal.Length, yend = pred), alpha = 0.3)
grilla <- data_grid(df, Petal.Length,
Sepal.Width = seq_range(Sepal.Width, n=5)) %>%
add_predictions(mod2)
View(grilla)
grilla <- data_grid(df, Petal.Length,
Sepal.Width = seq_range(Sepal.Width, n=5)) %>%
add_predictions(mod2)
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred))
, group=Sepal.Width
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
grilla <- data_grid(df, Petal.Length,
Sepal.Width = seq_range(Sepal.Width, n=5)) %>%
add_predictions(mod)
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
grilla <- data_grid(df, Petal.Length,
Sepal.Width = seq_range(Sepal.Width, n=5)) %>%
add_predictions(mod1)
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
grilla <- data_grid(df, Petal.Length,
Sepal.Width = seq_range(Sepal.Width, n=5)) %>%
add_predictions(mod2)
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
df %>% ggplot(aes(x=Petal.Length, y=Petal.Width,
color=Sepal.Width)) +
geom_point() +
geom_line(data=grilla, aes(y=pred, group=Sepal.Width))
summary(iris)
mod <- iris |> lm(Species ~ Petal.Length)
mod <- lm(Species ~ Petal.Length ,data=iris)
mod <- lm(Species ~ Petal.Length ,data=iris)
mod <- lm(Species ~ Petal.Length ,data=iris)
library(tidyverse)
glimpse(nycflights)
library('nycflights13')
install.packages("nycflights13")
library(nycflights13)
glimpse(flights)
view(flights)
view(flights)
data <- flights
summary(flights$dep_delay)
data = flights
unique(data)
unique(data)
unico = unique(data)
summary(data$dep_delay)
summary(data$arr_delay)
data = data |> mutte(dep_delay = replace(dep_delay, dep_delay==is.na(), median(dep_delay)))
data = data |> mutate(dep_delay = replace(dep_delay, dep_delay==is.na(), median(dep_delay)))
data = data |> mutate(dep_delay = replace(dep_delay, dep_delay==is.na(dep_delay), median(dep_delay)))
View(data)
data = data |> mutate(dep_delay = replace(dep_delay, dep_delay=='NA', median(dep_delay)))
View(data)
data = data |> mutate(dep_delay = replace(dep_delay, is.na(dep_delay), median(dep_delay, na.rm = T)))
data = flights
View(data)
data = data |> mutate(dep_delay = replace(dep_delay, is.na(dep_delay), median(dep_delay, na.rm = T)))
data = data |> mutate(arr_delay = replace(arr_delay, is.na(arr_delay), median(arr_delay, na.rm = T)))
data|> summarise(vuelos = n(),
na_dep_delay = sum(is.na(dep_delay)),
n_arr_delay = sum(is.na(arr_delay)))
data = flights
data|> summarise(vuelos = n(),
na_dep_delay = sum(is.na(dep_delay)),
n_arr_delay = sum(is.na(arr_delay)))
data = data |> mutate(dep_delay = replace(dep_delay, is.na(dep_delay), median(dep_delay, na.rm = T)))
data = data |> mutate(arr_delay = replace(arr_delay, is.na(arr_delay), median(arr_delay, na.rm = T)))
data|> summarise(vuelos = n(),
na_dep_delay = sum(is.na(dep_delay)),
n_arr_delay = sum(is.na(arr_delay)))
data|> summarise(vuelos = n(),
na_dep_delay = sum(is.na(dep_delay)),
n_arr_delay = sum(is.na(arr_delay)))
filter(data, data$arr_delay == 'NA')
filter(data, data$dep_delay == 'NA')
filter(data, data$dep_delay == None)
filter(data, data$dep_delay == 'None')
unique(data$dep_delay)
filter(data, is.na(data$dep_delay))
filter(data, is.na(data$arr_delay))
unique(data$dep_delay)
data <- data %>%
group_by(carrier, flight, origin) %>%
mutate(arr_delay = replace(arr_delay,
is.na(arr_delay),
median(arr_delay, na.rm = TRUE))) %>%
mutate(dep_delay = replace(dep_delay,
is.na(dep_delay),
median(dep_delay, na.rm = TRUE))) %>% ungroup()
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay))
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay))
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(slope = 1)
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(slope = 1, colour = 'red')
mod = lm(arr_delay ~ dep_dely, data = data)
mod = lm(arr_delay ~ dep_delay, data = data)
View(mod)
summary(mod)
View(mod)
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(slope = mod[['coefficients']][['dep_delay']], intercept = mod[['coefficientes']][['(Intercept)']], colour = 'red')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(slope = mod[['coefficients']][['dep_delay']], intercept = mod[['coefficientes']][[(Intercept)]], colour = 'red')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(slope = mod[['coefficients']][['dep_delay']], intercept = mod[['coefficientes']][['(Intercept)']], colour = 'red')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod[['coefficients']][['dep_delay']],
intercept = mod[['coefficientes']][['(Intercept)']]),
colour = 'red')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod[['coefficients']][['dep_delay']],
intercept = mod[['coefficients']][['(Intercept)']]),
colour = 'red')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod[['coefficients']][['dep_delay']],
intercept = mod[['coefficients']][['(Intercept)']]),
colour = 'red')+
labs(title = 'Atraso de salida vs atraso de llegada en vuelos',
x = 'Retraso de salida [minutos]',
y = 'Retrase de llegada [minutos]')
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod[['coefficients']][['dep_delay']],
intercept = mod[['coefficients']][['(Intercept)']]),
colour = 'red')+
labs(title = 'Atraso de salida vs atraso de llegada en vuelos',
x = 'Retraso de salida [minutos]',
y = 'Retrase de llegada [minutos]')+
theme_minimal()
mod1 = lm(arr_delay ~ dep_delay + month, data = data)
summary(mod1)
ggplot(data)+
geom_point(aes(x = dep_delay, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod1[['coefficients']][['dep_delay']],
intercept = mod1[['coefficients']][['(Intercept)']]),
colour = 'red')+
labs(title = 'Atraso de salida vs atraso de llegada en vuelos',
x = 'Retraso de salida [minutos]',
y = 'Retrase de llegada [minutos]')+
theme_minimal()
View(data)
ggplot(data)+
geom_point(aes(x = month, y = arr_delay), alpha = 0.5)+
geom_abline(aes(slope = mod1[['coefficients']][['month']],
intercept = mod1[['coefficients']][['(Intercept)']]),
colour = 'red')+
labs(title = 'Atraso de salida por mes',
x = 'Numero de mes',
y = 'Retraso de llegada [minutos]')+
theme_minimal()
data = data | add_predictions(model = mod1)
library(modelr)
data = data | add_predictions(model = mod1)
data = data |> add_predictions(model = mod1)
data |> group_by(month) |>
summarise(retraso_promedio = mean(pred))
data |> group_by(month) |>
summarise(retraso_promedio = mean(dep_delay-pred))
data |> group_by(month) |>
summarise(retraso_promedio = mean(pred))
data |>
filter(month == 1, dep_delay == 10) |>
summarise(retraso_promedio = mean(pred))
data |>
filter(month == 6, dep_delay == 10) |>
summarise(retraso_promedio = mean(pred))
data |>
filter(month == 7, dep_delay == 10) |>
summarise(retraso_promedio = mean(pred))
mod1 = lm(arr_delay ~ dep_delay + factor(month), data = data)
data |>
filter(month == 7, dep_delay == 10) |>
summarise(retraso_promedio = mean(pred))
data = data |> add_predictions(model = mod1)
r_delay ~ dep_delay + factor(month) + distance, data = data)
mod2 = lm(arr_delay ~ dep_delay + factor(month) + distance, data = data)
summary(mod2)
View(mod2)
data = data |> add_predictions(model = mod2)
data = data |> add_predictions(model = mod2)
summary(mod)
summary(mod1)
ggplot(data)+
geom_point(aes(x = distance, y = dep_delay-pred), alpha = 0.5)+
geom_abline(aes(slope = mod2[['coefficients']][['distance']],
intercept = mod2[['coefficients']][['(Intercept)']]),
colour = 'red')+
labs(title = 'Tiempo gnado por distancia del vuelo',
x = 'Distancia recorrida',
y = 'Tiempo ganado [minutos]')+
theme_minimal()
mod2 = lm(arr_delay ~ dep_delay + factor(month) + distance, data = data)
summary(mod2)
data = data |> add_predictions(model = mod2)
glimpse(planes)
glimpse(flights)
glimps(weather)
glimpse(weather)
data = inner_join(planes, flights, by = 'tailnum')
data = right_join(planes, flights, by = 'tailnum')
View(data)
mod3 = lm(data = data, formula = dep_delay ~ seats)
summary(mod3)
ggplot(data)+
geom_point(aes(x = seats, y = dep_delay), alpha = 0.5)+
geom_abline(aes(slope = mod3[['coefficients']][['seats']],
intercept = mod3[['coefficients']][['(Intercept)']]),
colour = 'red')+
theme_minimal()
install.packages("arrow")
library(tidyverse)
library(forcats)
taxis = read_csv('taxis.csv')
setwd("~/Documents/TP final/yellow-taxi")
library(tidyverse)
library(forcats)
taxis = read_csv('taxis.csv')
taxis = drop_na(taxis)
# Tarifa total en relación a la distancia del viaje
ggplot(taxis)+
geom_point(aes(x = trip_distance,
y = total_amount,
color = PUBorough),
alpha = 0.5,
na.rm = TRUE)+
labs(title = 'Distribución del precio por viaje según la distancia',
x = 'Distancia del viaje [millas]',
y = 'Tarifa [U$S]',
color = 'Zona de salida')+
ylim(0, 300)+
xlim(0, 50)+
theme_minimal()
# Podemos ver una relacion entre el aumento de la distancia
# y la tarifa correspondiente
# Aunque las relaciones varian mucho2
# Promedio de precio por hora
costo_por_hora = taxis |>
group_by(hour(tpep_pickup_datetime)) |>
summarise(costo = median(total_amount), cantidad = n()) |>
arrange(desc(costo)) |>
rename(hora = `hour(tpep_pickup_datetime)`)
# Entendiendo el costo por hora y la cantidad de viajes
ggplot(costo_por_hora)+
geom_col(aes(x = hora, y = cantidad, fill = costo))+
scale_fill_gradientn(colors = c("darkgreen", "yellow", "red"))+
labs(title = 'Densidad de viajes por hora',
x = 'Hora del día',
y = 'Cantidad de viajes',
fill = 'Costo promedio del viaje')
# El tipo de pago está relacionado a mayores propinas?
taxis |>
group_by(payment_type) |>
summarise(mean(tip_amount))
# SI! pagando con tarjeta de crédito hay mucha más propina
# Qué tipos de viaje entre zonas son más caros? Hay alguna relación?
taxis |>
group_by(PUBorough, DOBorough) |>
summarise(tarifa_promedio = median(total_amount, na.rm = T), viajes = n()) |>
arrange(desc(tarifa_promedio)) |>
filter(viajes > 20) |>
ggplot(aes(x = PUBorough, y = DOBorough, fill = tarifa_promedio)) +
geom_tile()+
scale_fill_gradientn(colors = c("darkgreen", "yellow", "red"))+
labs(title = "Tarifa mediana por par de zonas (+20 viajes)",
x = "Origen",
y = "Destino",
fill = "Tarifa [U$S]") +
theme_minimal()
# Cómo afecta la duración del viaje a la tarifa final?
ggplot(taxis, aes(x = trip_duration,
y = total_amount,
color = trip_distance))+
geom_point(na.rm = T, alpha = 0.5)+
xlim(0, 1750)
# ...no hay una relación clara
# Hay una relación entre el día de la semana y la tarifa?
taxis |>
group_by(weekdays(tpep_pickup_datetime)) |>
summarise(median(total_amount), mean(total_amount))
# No hay una relación clara
# Hay una relación entre el número de pasajeros y el precio?
taxis |>
group_by(passenger_count) |>
summarise(median(total_amount), mean(total_amount)) |>
ggplot(aes(x = passenger_count, y = `median(total_amount)`))+
geom_point()
# Tampoco podríamos decir que hay relación
# Hay "zonas premium" donde la tarifa valga más?
taxis |>
group_by(PUZone) |>
summarise(promedio_tarifa = median(total_amount), viajes = n()) |>
filter(viajes > 50) |>
mutate(rango_tarifa = case_when(
promedio_tarifa < 17 ~ "Mas baratas",
promedio_tarifa >= 80 ~ "Mas caras")) |>
filter(rango_tarifa %in% c('Mas baratas', 'Mas caras')) |>
ggplot() +
geom_col(aes(x = fct_reorder(PUZone, desc(promedio_tarifa)),
y = promedio_tarifa,
fill = promedio_tarifa),
na.rm = T, show.legend = F)+
scale_fill_gradientn(colors = c('orange', "red"))+
coord_flip()+
labs(title = 'Zonas más caras y más baratas para pedir un taxi',
x = '',
y = 'Tarifa promedio')
# La duración del viaje afecta a la tarifa según la distancia?
taxis |>
filter(trip_duration < 120 & trip_duration > 0) |>
ggplot()+
geom_point(aes(x = trip_distance,
y = total_amount,
color = trip_duration),
alpha = 0.5,
na.rm = TRUE)+
scale_color_gradientn(colors = c('orange', 'red', "purple"))+
labs(title = 'Distribución del precio por viaje según la distancia',
x = 'Distancia del viaje [millas]',
y = 'Tarifa [U$S]',
color = 'Duración del viaje')+
ylim(0, 300)+
xlim(0, 50)+
theme_minimal()
# Se logra apreciar una relación mínima
